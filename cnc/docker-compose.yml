# MIT License Copyright (c) 2021, h1zzz

version: "3.9"
services:
  mysql:
    container_name: mysql
    image: mysql
    command:
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./db.sql:/docker-entrypoint-initdb.d/db.sql:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql
    networks:
    - backend

  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_DIR}/redis:/data
    networks:
      - backend

  minio:
    container_name: minio
    image: minio/minio
    command:
      server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_DIR}/minio:/data
    networks:
      - backend

  cnc:
    container_name: cnc
    build: .
    image: cnc
    restart: always
    depends_on:
      - mysql
      - redis
      - minio
    environment:
      DOCKER_COMPOSE: "true"
      LISTEN_ADDR: ${LISTEN_ADDR}
      MYSQL_ADDR: ${MYSQL_ADDR}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MINIO_ADDR: ${MINIO_ADDR}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      REDIS_ADDR: ${REDIS_ADDR}
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - backend

  nginx:
    container_name: nginx
    image: nginx:alpine
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cert:/etc/nginx/cert:ro
    depends_on:
      - cnc
    ports:
      - 443:443 # nginx/nginx.conf listen 443 ssl;
    networks:
      - backend

networks:
  backend:
    name: purewater_backend
    driver: bridge
